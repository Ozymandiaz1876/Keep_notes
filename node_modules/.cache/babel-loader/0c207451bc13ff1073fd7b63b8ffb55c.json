{"ast":null,"code":"import _defineProperty from\"F:/web_developement/wd/to-do/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"F:/web_developement/wd/to-do/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"F:/web_developement/wd/to-do/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import AddIcon from\"@material-ui/icons/Add\";import Fab from\"@material-ui/core/Fab\";import Zoom from\"@material-ui/core/Zoom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function CreateArea(props){var _useState=useState({title:\"\",content:\"\"}),_useState2=_slicedToArray(_useState,2),note=_useState2[0],setNote=_useState2[1];var _useState3=useState(\"False\"),_useState4=_slicedToArray(_useState3,2),Expandable=_useState4[0],setExpandable=_useState4[1];function handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setNote(function(prevNote){return _objectSpread(_objectSpread({},prevNote),{},_defineProperty({},name,value));});}function submitNote(event){(note.title!==\"\"||note.content!==\"\")&&props.onAdd(note);setNote({title:\"\",content:\"\"});event.preventDefault();}function OpenNotes(){setExpandable(\"true\");}return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"form\",{className:\"create-note\",children:[Expandable===\"true\"&&/*#__PURE__*/_jsx(\"input\",{name:\"title\",onChange:handleChange,value:note.title,placeholder:\"Title\"}),\" \",/*#__PURE__*/_jsx(\"textarea\",{name:\"content\",onChange:handleChange,value:note.content,placeholder:\"Take a note...\",rows:Expandable===\"true\"?3:1,onClick:OpenNotes}),Expandable===\"true\"&&/*#__PURE__*/_jsx(Zoom,{in:Expandable,children:/*#__PURE__*/_jsx(Fab,{color:\"primary\",\"aria-label\":\"add\",onClick:submitNote,children:/*#__PURE__*/_jsx(AddIcon,{})})})]})});}export default CreateArea;","map":{"version":3,"sources":["F:/web_developement/wd/to-do/src/components/CreateArea.jsx"],"names":["React","useState","AddIcon","Fab","Zoom","CreateArea","props","title","content","note","setNote","Expandable","setExpandable","handleChange","event","target","name","value","prevNote","submitNote","onAdd","preventDefault","OpenNotes"],"mappings":"0bAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,CACA,MAAOC,CAAAA,GAAP,KAAgB,uBAAhB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,C,wFAEA,QAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,eACDL,QAAQ,CAAC,CAC/BM,KAAK,CAAE,EADwB,CAE/BC,OAAO,CAAE,EAFsB,CAAD,CADP,wCAClBC,IADkB,eACZC,OADY,8BAKWT,QAAQ,CAAC,OAAD,CALnB,yCAKlBU,UALkB,eAKNC,aALM,eAOzB,QAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,mBACHA,KAAK,CAACC,MADH,CACnBC,IADmB,eACnBA,IADmB,CACbC,KADa,eACbA,KADa,CAE3BP,OAAO,CAAC,SAACQ,QAAD,CAAc,CACpB,sCACKA,QADL,wBAEGF,IAFH,CAEUC,KAFV,GAID,CALM,CAAP,CAMD,CAED,QAASE,CAAAA,UAAT,CAAoBL,KAApB,CAA2B,CACzB,CAACL,IAAI,CAACF,KAAL,GAAe,EAAf,EAAqBE,IAAI,CAACD,OAAL,GAAiB,EAAvC,GACAF,KAAK,CAACc,KAAN,CAAYX,IAAZ,CADA,CAECC,OAAO,CAAC,CACPH,KAAK,CAAE,EADA,CAEPC,OAAO,CAAE,EAFF,CAAD,CAAP,CAIDM,KAAK,CAACO,cAAN,GACD,CAED,QAASC,CAAAA,SAAT,EAAqB,CACnBV,aAAa,CAAC,MAAD,CAAb,CACD,CAED,mBACE,kCAEE,cAAM,SAAS,CAAC,aAAhB,WACGD,UAAU,GAAK,MAAf,eACC,cACE,IAAI,CAAC,OADP,CAEE,QAAQ,CAAEE,YAFZ,CAGE,KAAK,CAAEJ,IAAI,CAACF,KAHd,CAIE,WAAW,CAAC,OAJd,EAFJ,CAQK,GARL,cASE,iBACE,IAAI,CAAC,SADP,CAEE,QAAQ,CAAEM,YAFZ,CAGE,KAAK,CAAEJ,IAAI,CAACD,OAHd,CAIE,WAAW,CAAC,gBAJd,CAKE,IAAI,CAAEG,UAAU,GAAK,MAAf,CAAwB,CAAxB,CAA4B,CALpC,CAME,OAAO,CAAEW,SANX,EATF,CAkBGX,UAAU,GAAK,MAAf,eACC,KAAC,IAAD,EAAM,EAAE,CAAEA,UAAV,uBACE,KAAC,GAAD,EAAK,KAAK,CAAC,SAAX,CAAqB,aAAW,KAAhC,CAAsC,OAAO,CAAEQ,UAA/C,uBACE,KAAC,OAAD,IADF,EADF,EAnBJ,GAFF,EADF,CA+BD,CAED,cAAed,CAAAA,UAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\n\r\nfunction CreateArea(props) {\r\n  const [note, setNote] = useState({\r\n    title: \"\",\r\n    content: \"\"\r\n  });\r\n  const [Expandable, setExpandable] = useState(\"False\");\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    setNote((prevNote) => {\r\n      return {\r\n        ...prevNote,\r\n        [name]: value\r\n      };\r\n    });\r\n  }\r\n\r\n  function submitNote(event) {\r\n    (note.title !== \"\" || note.content !== \"\") &&\r\n    props.onAdd(note);\r\n     setNote({\r\n      title: \"\",\r\n      content: \"\"\r\n    });\r\n    event.preventDefault();\r\n  }\r\n\r\n  function OpenNotes() {\r\n    setExpandable(\"true\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n    \r\n      <form className=\"create-note\">\r\n        {Expandable === \"true\" && (\r\n          <input\r\n            name=\"title\"\r\n            onChange={handleChange}\r\n            value={note.title}\r\n            placeholder=\"Title\"\r\n          />\r\n        )}{\" \"}\r\n        <textarea\r\n          name=\"content\"\r\n          onChange={handleChange}\r\n          value={note.content}\r\n          placeholder=\"Take a note...\"\r\n          rows={Expandable === \"true\" ? 3 : 1}\r\n          onClick={OpenNotes}\r\n        >\r\n        </textarea>\r\n        {Expandable === \"true\" && (\r\n          <Zoom in={Expandable}>\r\n            <Fab color=\"primary\" aria-label=\"add\" onClick={submitNote}>\r\n              <AddIcon />\r\n            </Fab>\r\n          </Zoom>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateArea;\r\n"]},"metadata":{},"sourceType":"module"}